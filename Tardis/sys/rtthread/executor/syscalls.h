// AUTOGENERATED FILE
// clang-format off

#if GOOS_freertos

#if GOARCH_arm
const call_t syscalls[] = {
    {"pcTimerGetName", 0, {}, (syscall_t)pcTimerGetName},
    {"pvTaskGetThreadLocalStoragePointer", 0, {}, (syscall_t)pvTaskGetThreadLocalStoragePointer},
    {"pvTimerGetTimerID", 0, {}, (syscall_t)pvTimerGetTimerID},
    {"ulTaskEndTrace", 0, {}, (syscall_t)ulTaskEndTrace},
    {"ulTaskNotifyTake", 0, {}, (syscall_t)ulTaskNotifyTake},
    {"ulTaskNotifyTakeIndexed", 0, {}, (syscall_t)ulTaskNotifyTakeIndexed},
    {"uxTaskGetNumberOfTasks", 0, {}, (syscall_t)uxTaskGetNumberOfTasks},
    {"uxTaskGetSystemState", 0, {}, (syscall_t)uxTaskGetSystemState},
    {"uxTimerGetReloadMode", 0, {}, (syscall_t)uxTimerGetReloadMode},
    {"vTaskGetInfo", 0, {}, (syscall_t)vTaskGetInfo},
    {"vTaskGetRunTimeStats", 0, {}, (syscall_t)vTaskGetRunTimeStats},
    {"vTaskList", 0, {}, (syscall_t)vTaskList},
    {"vTaskNotifyGiveFromISR", 0, {}, (syscall_t)vTaskNotifyGiveFromISR},
    {"vTaskNotifyGiveIndexedFromISR", 0, {}, (syscall_t)vTaskNotifyGiveIndexedFromISR},
    {"vTaskSetApplicationTaskTag", 0, {}, (syscall_t)vTaskSetApplicationTaskTag},
    {"vTaskSetThreadLocalStoragePointer", 0, {}, (syscall_t)vTaskSetThreadLocalStoragePointer},
    {"vTaskSetTimeOutState", 0, {}, (syscall_t)vTaskSetTimeOutState},
    {"vTaskStartTrace", 0, {}, (syscall_t)vTaskStartTrace},
    {"vTimerSetReloadMode", 0, {}, (syscall_t)vTimerSetReloadMode},
    {"vTimerSetTimerID", 0, {}, (syscall_t)vTimerSetTimerID},
    {"xTaskCallApplicationTaskHook", 0, {}, (syscall_t)xTaskCallApplicationTaskHook},
    {"xTaskCheckForTimeOut", 0, {}, (syscall_t)xTaskCheckForTimeOut},
    {"xTaskGetApplicationTaskTag", 0, {}, (syscall_t)xTaskGetApplicationTaskTag},
    {"xTaskGetApplicationTaskTagFromISR", 0, {}, (syscall_t)xTaskGetApplicationTaskTagFromISR},
    {"xTaskGetCurrentTaskHandle", 0, {}, (syscall_t)xTaskGetCurrentTaskHandle},
    {"xTaskGetHandle", 0, {}, (syscall_t)xTaskGetHandle},
    {"xTaskGetIdleRunTimeCounter", 0, {}, (syscall_t)xTaskGetIdleRunTimeCounter},
    {"xTaskGetSchedulerState", 0, {}, (syscall_t)xTaskGetSchedulerState},
    {"xTaskGetTickCount", 0, {}, (syscall_t)xTaskGetTickCount},
    {"xTaskGetTickCountFromISR", 0, {}, (syscall_t)xTaskGetTickCountFromISR},
    {"xTaskNotify", 0, {}, (syscall_t)xTaskNotify},
    {"xTaskNotifyAndQuery", 0, {}, (syscall_t)xTaskNotifyAndQuery},
    {"xTaskNotifyAndQueryFromISR", 0, {}, (syscall_t)xTaskNotifyAndQueryFromISR},
    {"xTaskNotifyAndQueryIndexed", 0, {}, (syscall_t)xTaskNotifyAndQueryIndexed},
    {"xTaskNotifyAndQueryIndexedFromISR", 0, {}, (syscall_t)xTaskNotifyAndQueryIndexedFromISR},
    {"xTaskNotifyFromISR", 0, {}, (syscall_t)xTaskNotifyFromISR},
    {"xTaskNotifyGive", 0, {}, (syscall_t)xTaskNotifyGive},
    {"xTaskNotifyGiveIndexed", 0, {}, (syscall_t)xTaskNotifyGiveIndexed},
    {"xTaskNotifyIndexed", 0, {}, (syscall_t)xTaskNotifyIndexed},
    {"xTaskNotifyIndexedFromISR", 0, {}, (syscall_t)xTaskNotifyIndexedFromISR},
    {"xTaskNotifyStateClear", 0, {}, (syscall_t)xTaskNotifyStateClear},
    {"xTaskNotifyStateClearIndexed", 0, {}, (syscall_t)xTaskNotifyStateClearIndexed},
    {"xTaskNotifyWait", 0, {}, (syscall_t)xTaskNotifyWait},
    {"xTaskNotifyWaitIndexed", 0, {}, (syscall_t)xTaskNotifyWaitIndexed},
    {"xTimerChangePeriod", 0, {}, (syscall_t)xTimerChangePeriod},
    {"xTimerChangePeriodFromISR", 0, {}, (syscall_t)xTimerChangePeriodFromISR},
    {"xTimerCreate", 0, {}, (syscall_t)xTimerCreate},
    {"xTimerCreateStatic", 0, {}, (syscall_t)xTimerCreateStatic},
    {"xTimerDelete", 0, {}, (syscall_t)xTimerDelete},
    {"xTimerGetExpiryTime", 0, {}, (syscall_t)xTimerGetExpiryTime},
    {"xTimerGetPeriod", 0, {}, (syscall_t)xTimerGetPeriod},
    {"xTimerGetTimerDaemonTaskHandle", 0, {}, (syscall_t)xTimerGetTimerDaemonTaskHandle},
    {"xTimerIsTimerActive", 0, {}, (syscall_t)xTimerIsTimerActive},
    {"xTimerPendFunctionCall", 0, {}, (syscall_t)xTimerPendFunctionCall},
    {"xTimerReset", 0, {}, (syscall_t)xTimerReset},
    {"xTimerResetFromISR", 0, {}, (syscall_t)xTimerResetFromISR},
    {"xTimerStart", 0, {}, (syscall_t)xTimerStart},
    {"xTimerStartFromISR", 0, {}, (syscall_t)xTimerStartFromISR},
    {"xTimerStop", 0, {}, (syscall_t)xTimerStop},
    {"xTimerStopFromISR", 0, {}, (syscall_t)xTimerStopFromISR},
};
#endif

#endif

#if GOOS_ucos

#if GOARCH_arm
const call_t syscalls[] = {
    {"access", 0, {}, (syscall_t)access},
    {"closedir", 0, {}, (syscall_t)closedir},
    {"dfs_filesystem_get_mounted_path", 0, {}, (syscall_t)dfs_filesystem_get_mounted_path},
    {"dfs_filesystem_lookup", 0, {}, (syscall_t)dfs_filesystem_lookup},
    {"dfs_init", 0, {}, (syscall_t)dfs_init},
    {"dfs_lock", 0, {}, (syscall_t)dfs_lock},
    {"dfs_mkfs", 0, {}, (syscall_t)dfs_mkfs},
    {"dfs_mount", 0, {}, (syscall_t)dfs_mount},
    {"dfs_normalize_path", 0, {}, (syscall_t)dfs_normalize_path},
    {"dfs_register", 0, {}, (syscall_t)dfs_register},
    {"dfs_subdir", 0, {}, (syscall_t)dfs_subdir},
    {"dfs_unlock", 0, {}, (syscall_t)dfs_unlock},
    {"dfs_unmount", 0, {}, (syscall_t)dfs_unmount},
    {"fd_get", 0, {}, (syscall_t)fd_get},
    {"fd_is_open", 0, {}, (syscall_t)fd_is_open},
    {"fd_new", 0, {}, (syscall_t)fd_new},
    {"fd_put", 0, {}, (syscall_t)fd_put},
    {"fstat", 0, {}, (syscall_t)fstat},
    {"fsync", 0, {}, (syscall_t)fsync},
    {"mkdir", 0, {}, (syscall_t)mkdir},
    {"open", 0, {}, (syscall_t)open},
    {"opendir", 0, {}, (syscall_t)opendir},
    {"read", 0, {}, (syscall_t)read},
    {"readdir", 0, {}, (syscall_t)readdir},
    {"rename", 0, {}, (syscall_t)rename},
    {"rewinddir", 0, {}, (syscall_t)rewinddir},
    {"rmdir", 0, {}, (syscall_t)rmdir},
    {"rt_application_init", 0, {}, (syscall_t)rt_application_init},
    {"rt_free", 0, {}, (syscall_t)rt_free},
    {"rt_malloc", 0, {0, 0, 0, 1, }, (syscall_t)rt_malloc},
    {"rt_memcmp", 0, {0, 0, 0, 1, }, (syscall_t)rt_memcmp},
    {"rt_memcpy", 0, {}, (syscall_t)rt_memcpy},
    {"rt_memmove", 0, {}, (syscall_t)rt_memmove},
    {"rt_memset", 0, {}, (syscall_t)rt_memset},
    {"rt_mp_alloc", 0, {}, (syscall_t)rt_mp_alloc},
    {"rt_mp_create", 0, {}, (syscall_t)rt_mp_create},
    {"rt_mp_delete", 0, {}, (syscall_t)rt_mp_delete},
    {"rt_mp_detach", 0, {}, (syscall_t)rt_mp_detach},
    {"rt_mp_free", 0, {}, (syscall_t)rt_mp_free},
    {"rt_mp_init", 0, {}, (syscall_t)rt_mp_init},
    {"rt_realloc", 0, {}, (syscall_t)rt_realloc},
    {"rt_show_version", 0, {}, (syscall_t)rt_show_version},
    {"rt_snprintf", 0, {}, (syscall_t)rt_snprintf},
    {"rt_strcasecmp", 0, {0, 0, 0, 1, }, (syscall_t)rt_strcasecmp},
    {"rt_strcmp", 0, {0, 0, 0, 1, }, (syscall_t)rt_strcmp},
    {"rt_strdup", 0, {}, (syscall_t)rt_strdup},
    {"rt_strlen", 0, {0, 0, 0, 1, }, (syscall_t)rt_strlen},
    {"rt_strncmp", 0, {0, 0, 0, 1, }, (syscall_t)rt_strncmp},
    {"rt_strncpy", 0, {0, 0, 0, 1, }, (syscall_t)rt_strncpy},
    {"rt_strnlen", 0, {0, 0, 0, 1, }, (syscall_t)rt_strnlen},
    {"rt_strstr$res1", 0, {}, (syscall_t)rt_strstr},
    {"rt_system_scheduler_init", 0, {}, (syscall_t)rt_system_scheduler_init},
    {"rt_system_scheduler_start", 0, {}, (syscall_t)rt_system_scheduler_start},
    {"rt_system_signal_init", 0, {}, (syscall_t)rt_system_signal_init},
    {"rt_system_timer_init", 0, {}, (syscall_t)rt_system_timer_init},
    {"rt_system_timer_thread_init", 0, {}, (syscall_t)rt_system_timer_thread_init},
    {"rt_thread_idle_init", 0, {}, (syscall_t)rt_thread_idle_init},
    {"rt_tick_from_millisecond", 0, {}, (syscall_t)rt_tick_from_millisecond},
    {"rt_tick_get", 0, {}, (syscall_t)rt_tick_get},
    {"rt_tick_increase", 0, {}, (syscall_t)rt_tick_increase},
    {"rt_tick_set", 0, {}, (syscall_t)rt_tick_set},
    {"rt_timer_control", 0, {}, (syscall_t)rt_timer_control},
    {"rt_timer_create", 0, {}, (syscall_t)rt_timer_create},
    {"rt_timer_delete", 0, {}, (syscall_t)rt_timer_delete},
    {"rt_timer_init", 0, {}, (syscall_t)rt_timer_init},
    {"rt_timer_start", 0, {}, (syscall_t)rt_timer_start},
    {"rt_timer_stop", 0, {}, (syscall_t)rt_timer_stop},
    {"seekdir", 0, {}, (syscall_t)seekdir},
    {"stat", 0, {}, (syscall_t)stat},
    {"statfs", 0, {}, (syscall_t)statfs},
    {"telldir", 0, {}, (syscall_t)telldir},
    {"unlink", 0, {}, (syscall_t)unlink},
    {"write", 0, {}, (syscall_t)write},
};
#endif

#endif

